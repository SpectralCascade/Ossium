{
	// Place your Ossium workspace snippets here.
	// Each snippet is defined under a snippet name and has a scope, prefix, body and description.
	// Add comma separated ids of the languages where the snippet is applicable in the scope field.
	// If scope is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New Component": {
		"scope": "c,cpp",
		"prefix": "component",
		"body": [
			"#include \"../Core/component.h\""
			"",
			"namespace Ossium",
			"{",
			"\t",
			"\tstruct ${1:MyComponent}Schema : public Schema<${1:MyComponent}Schema, 20>",
			"\t{",
			"\t\tDECLARE_BASE_SCHEMA(${1:MyComponent}Schema, 20);",
			"\t\t",
			"\t};",
			"\t",
			"\t",
			"\tclass ${1:MyComponent} : public Component, public ${1:MyComponent}Schema",
			"\t{",
			"\tpublic:",
			"\t\tCONSTRUCT_SCHEMA(Component, ${1:MyComponent}Schema);",
			"\t\tDECLARE_COMPONENT(Component, ${1:MyComponent});",
			"\t\t",
			"\t\t$0",
			"\t\t",
			"\t};",
			"\t",
			"}",
			""
		],
		"description": "Create boilerplate code for a new component"
	},
	"Header": {
		"scope": "c,cpp",
		"prefix": "header",
		"body": [
			"#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"#define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
			"namespace Ossium",
			"{",
			"\t",
			"\t$0",
			"\t",
			"}",
			"",
			"#endif // ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
		],
		"description": "Create boilerplate code for a new header file"
	}
}